/**************************************************************************/
/*                                                                        */
/* Copyright (c) 2001, 2011 NoMachine (http://www.nomachine.com)          */
/* Copyright (c) 2008-2014 Oleksandr Shneyder <o.shneyder@phoca-gmbh.de>  */
/* Copyright (c) 2011-2016 Mike Gabriel <mike.gabriel@das-netzwerkteam.de>*/
/* Copyright (c) 2014-2016 Mihai Moldovan <ionic@ionic.de>                */
/* Copyright (c) 2014-2016 Ulrich Sibiller <uli42@gmx.de>                 */
/* Copyright (c) 2015-2016 Qindel Group (http://www.qindel.com)           */
/*                                                                        */
/* nx-X11, NX protocol compression and NX extensions to this software     */
/* are copyright of the aforementioned persons and companies.             */
/*                                                                        */
/* Redistribution and use of the present software is allowed according    */
/* to terms specified in the file LICENSE which comes in the source       */
/* distribution.                                                          */
/*                                                                        */
/* All rights reserved.                                                   */
/*                                                                        */
/**************************************************************************/

/******************************************************************************/
/*
 * This file is to provide a quick method for most people to change the
 * behaviour of their Xorg installation without having to fully
 * understand the workings of site.def and all the various '.cf' files.
 *
 * In the vast majority of cases, it should not be necessary to use this
 * file at all or change it in any way.
 *
 * This file is divided into two sections.  The first contains settings
 * that end-users might reasonably change.  The second contains settings
 * that developers might want to change.
 *
 * IMPORTANT NOTE:  In all cases changing the defaults may cause problems
 * and/or unexpected side-effects.  If you don't understand what a setting
 * does, then it's best to not change it.  If you make changes and have
 * problems, verify that those problems are also present when using an
 * empty host.def file and unchanged version of this file before reporting
 * them.
 *
 * A good way to use this file is to copy it to host.def, and make the
 * changes there.  That way, future patches to this file won't fail.
 * The host.def file will never be patched.
 *
 * The distributed version of this file MUST contain no uncommented
 * definitions.  Default definitions belong in xorg.cf, or <vendor>.cf
 * files.
 */
/******************************************************************************/

#if defined(SunArchitecture)
#define ProjectRoot /usr/openwin
#endif

/*
 * Enable use the Cygwin IPC libraries to get MIT-SHM support.
 */
#if defined(cygwinArchitecture)
#define UseCygIPC	YES
#endif

/*
 * If you have build-specific modifications in your host.def file, but
 * want an empty host.def file installed when doing 'make install',
 * uncomment the following
 *
#define InstallEmptyHostDef
 */

/*
 * Which servers to build.  There is only Xorg server.
 * It can be disabled by the following.
 *
#define XorgServer		NO
 */
#define XorgServer		NO

/*
 * Building libraries with NX enhancements is disabled
 * by default. You should enable this in your host.def.
 *
#define NXLibraries		YES
 */
#define NXLibraries		YES

/*
 * Building the NX agent nested server is disabled
 * by default. Enable this in your host.def.
 *
#define NXAgentServer		YES
 */
#define NXAgentServer		YES

#ifdef NXAgentServer
#define BuildRenderLibrary	YES
#endif

/*
 * Define this symbol to build the NX enhanced MS Windows
 * X server for Cygnus environment.
 *
#define NXWinServer		YES
 */
#if defined(cygwinArchitecture)
#define NXWinServer             NO
#endif

/*
 * Set the default server (ie the one that gets the sym-link to "X")
 *
#define ServerToInstall		Xorg
 */

/*
 * Force build of X libraries if any nested server is to be built.
 *
#define BuildLibraries			YES
 *
 * If you just want libraries for NXAgentServer, this should be
 * enough (never tested, although).
 *
#define BuildLibrariesForXServers	YES
 */
#if NXAgentServer
#define BuildLibraries			YES
#endif

#define BuildDocs                       NO

#define BuildComposite			YES

/*
 * Server configuration parameters.  The defaults are shown here:
 */

/*
 * Select the XInput devices you want by uncommenting this.
 *
#define XInputDrivers		mouse keyboard acecad calcomp citron \
				digitaledge dmc dynapro elographics \
				microtouch mutouch penmount spaceorb summa \
				wacom void magictouch aiptek
 */

/*
 * To use the deprecated, old keyboard driver, uncomment this.  But
 * even better, make the new keyboard driver (hw/xfree86/input/keyboard)
 * work for your architechture.  The old driver will be removed in the
 * next release.
 *
#define UseDeprecatedKeyboardDriver YES
 */

/*
 * Include True Type Fonts to default font path. It is safe to do
 * this by default as NX intaller carries only misc and TTF in the
 * basic set of fonts installed under Windows.
 *
#define DefaultFontPath		$(FONTDIR)/misc/,$(FONTDIR)/Speedo/,$(FONTDIR)/Type1/,$(FONTDIR)/75dpi/,$(FONTDIR)/100dpi/
 */

#if defined(LinuxArchitecture) || defined(SunArchitecture) || defined(FreeBSDArchitecture)
#define DefaultFontPath		$(FONTDIR)/misc/,$(FONTDIR)/Speedo/,$(FONTDIR)/Type1/,$(FONTDIR)/75dpi/,$(FONTDIR)/100dpi/,$(FONTDIR)/TTF/
#endif /* #if defined(LinuxArchitecture) || defined(SunArchitecture) */

#if defined(cygwinArchitecture)
#define DefaultFontPath		/mnt/NX/fonts/base/,/mnt/NX/fonts/misc/,/mnt/NX/fonts/Speedo/,/mnt/NX/fonts/Type1/,/mnt/NX/fonts/75dpi/,/mnt/NX/fonts/100dpi/,/mnt/NX/fonts/TTF/
#define DefaultRGBDatabase      /mnt/NX/fonts/rgb
#endif /* #if defined(cygwinArchitecture) */

/*
 * To build only the servers with a cut-down source tree, uncomment
 * this.
 *
#define BuildServersOnly	YES
 */
#define BuildServersOnly	YES

/*
 * Undefine the following if you don't want to have config files and
 * app-defaults installed in a separate directory (i.e. /etc/X11).
 *
#define UseSeparateConfDir NO
 */

/*
 * Unless you're a developer you shouldn't need to change anything
 * beyond this point.
 */

/*
 * If you want to enable some developer settings, like more verbose
 * compiler warnings, uncomment this.
 *
#define XFree86Devel	YES
*/

/*
 * If using GCC 2.x on a system where it isn't the default, uncomment
 * the following
 *
 */
#if defined(SunArchitecture)
#define HasGcc2		YES
#define HasGcc		YES
#endif

/*
 * The default optimisation flags for GCC 2.x.  -fno-strength-reduce is
 * here to work around a bug in -O2 for GCC 2.x on i386 platforms.
 * If you are using a version that doesn't have this bug, you can
 * uncomment the following line, and remove '-fno-strength-reduce'
 * If you are building binaries for a 486, it may be beneficial to add
 * -m486
 *
#define DefaultGcc2i386Opt	-O2 -fno-strength-reduce
 */

#if defined (LinuxArchitecture)
#define DefaultGcc2i386Opt      -g -O3
#endif

/*
 * Enable all the optimizations on AMD64.
 */

#define DefaultGcc2AMD64Opt	-g -O3 GccAliasingArgs

/*
 * This allows the GCC warning flags to be set.  The default is shown here.
 *
#define GccWarningOptions -Wall -Wpedantic -Wpointer-arith -Wstrict-prototypes \
                          -Wmissing-prototypes -Wmissing-declarations \
                          -Wredundant-decls -Wnested-externs
 */

/* 
 * Sun Compiler stuff.. 
 *
#define HasSunC                         YES
#define HasSunCplusplus                 YES
#define CplusplusCompilerMajorVersion   5
#define CplusplusCompilerMinorVersion   0
#define CCompilerMajorVersion           5
#define CCompilerMinorVersion           0
 */

/*
 * Optimized Sun Compiler Build.
 *
#define DefaultCDebugFlags              -xO4 -xtarget=pentium_pro
#define OptimizedCDebugFlags            -xO4 -xtarget=pentium_pro
 */

/* 
 * Debuggable Sun Compiler Build. 
 * Note: This builds _EVERYTHING_ as debuggable
 *
#define DefaultCDebugFlags              -g -xs
#define OptimizedCDebugFlags            -g -xs
 */

/*
 * For Linux, this should match the Binutils version you have.  This example
 * is for 2.6.0.7.  See linux.cf for the default setting.
 *
 * This should automatically get set correctly by imake.
 *
#define LinuxBinUtilsMajorVersion	26
 */

/*
 * For Linux, these should match the libc version you have.  This example
 * is for libc.5.4.x.  See linux.cf for the default setting.
 *
 * This should automatically get set correctly by imake.
 *
#define LinuxCLibMajorVersion	5
#define LinuxClibMinorVersion	4
 */

/*
 * If you want to use the GNU malloc library, uncomment this
 *
#define UseGnuMalloc		YES
 */

/*
 * Set this to whatever is required to access the GNU malloc library.
 * The default is '-lgmalloc' unless is specified in the OS's .cf file.
 *
#define GnuMallocLibrary	-L/usr/local/lib -lgmalloc
 */

/*
 * Some Linux releases don't have a libtermcap.  In this case you may need
 * to uncomment the following
 *
#define TermcapLibrary		-lncurses
 */

/*
 * Build XAA.  This can be disabled with:
 *
#define XF86XAA			NO
 */

/*
 * Build vgahw.  This can be disabled with:
 *
#define XF86VgaHw		NO
 */

/*
 * Build xf1bpp.  This can be disabled with:
 *
#define XF1Bpp			NO
 */

/*
 * Build xf4bpp.  This can be disabled with:
 *
#define XF4Bpp			NO
 */


/*
 * BSD Console driver support (for FreeBSD and NetBSD).
 *
 * By default, support is included for pccons and pcvt for NetBSD, and
 * pccons, syscons and pcvt for FreeBSD.
 *
 * To change the list of supported drivers, set the following parameter.
 * Possible values are -DPCCONS_SUPPORT, -DSYSCONS_SUPPORT, -DPCVT_SUPPORT.
 * The following example includes support for syscons and pcvt only.
 *
#define XFree86ConsoleDefines	-DSYSCONS_SUPPORT -DPCVT_SUPPORT
 */

/*
 * To disable building XInput support, uncomment this
 *
#define BuildXInputExt		NO
 */
#if defined(SunArchitecture)
#define BuildXInputExt		YES
#endif

/*
 * Uncomment this for joystick support.
 *
 * Note: Joystick support is broken, so don't enable this.
 *
#define JoystickSupport YES
 */

/*
 * To disable the ScreenSaver Extension, uncomment this line.
 *
#define BuildScreenSaverExt	NO
 */
#define BuildScreenSaverExt	NO

/* 
 * If you don't want to build Xinerama support, uncomment this.
 *
#define BuildXinerama		NO
 */
#define BuildXinerama		YES

/*
 * If you don't want to build support for the GLX extension, uncomment this.
 *
#define BuildGlxExt             NO
 */
#define BuildGlxExt             YES

/*
 * Taken from xorg.cf.
 */

#if defined(SparcArchitecture)  \
   || defined (Sparc64Architecture) \
   || defined(ia64Architecture) \
   || defined(s390xArchitecture) \
   || defined(AMD64Architecture)
#define GlxExtraDefines -D__GLX_ALIGN64
#endif

#define BuildXKB		YES
#define BuildXKBlib		YES

/*
 * If you are running NetBSD 0.9C or later, and have the aperture driver
 * installed, uncomment this.
 *
#define HasNetBSDApertureDriver	YES
 */

/*
 * If you are running SVR3 and have the mmap driver installed (for linear
 * framebuffer access) uncomment this.
 *
#define HasSVR3mmapDrv	YES
 */

/*
 * If you are using an SVR3 (like ISC 4.x) which supports long file names,
 * you can uncomment this to have manual pages installed under their
 * full names
 *
#define ExpandManNames		YES
 */

/*
 * For a POSIXized build on Interactive uncomment this
 * Could be used with gcc 'till Version 2.6.3
 * Should be used with gcc 2.7.2. 
 *
#define UsePosix		YES
 */

/*
 * If you don't want XDMAUTH support (if you don't have Wraphelp.c), 
 *  comment this out.
 *
 */
#if defined(LinuxArchitecture)
#define HasXdmAuth		YES
#endif /* #if defined(LinuxArchitecture) */

/*
 * If you have Linux DECnet support, and want to build XFree86 with support
 * for connections over DECnet, uncomment this.
 *
#define HasDECnet		YES
 */

/*
 * To build static and shared libraries with debugging information, uncomment
 * this. Assumes you have Gcc2.
 * (If you don't have Gcc2, you can use the DebugLib{X11,...} variables
 * to build debugging versions of the libraries separately.)
 *
#define DebuggableLibraries	YES
*/
#if defined(LinuxArchitecture)
#define DebuggableLibraries	YES
#endif /* #if defined(LinuxArchitecture) */
/*
 * To forceably build static libraries in addition to shared libraries,
 * uncomment this.
 *
#define ForceNormalLib		YES
 */

/*
 * Uncomment this if your default tools (eg, gcc, ld, as, etc) are
 * not the Linux ELF versions.
 *
#define LinuxElfDefault		NO
 */

/*
 * To use ELF format shared libraries for supported OSs, uncomment this.
 *
 * For Linux the default setting of this is the same as the setting of
 * LinuxElfDefault.
 *
 * For FreeBSD this should automatically be set correctly by imake.  Only
 * change it here if you need to override the automatic setting.
 *
#define UseElfFormat		YES
 */

/*
 * For FreeBSD/ELF (FreeBSD 3.0) it is possible to also build and install
 * a.out compatibility libraries.  To enable that, uncomment this.
 *
#define BuildAoutLibraries	YES
 */

/*
 * If you have trouble with make bombing out in Xlib, try uncommenting this.
 * You will not get dependencies as a result, but better than nothing.
 *
#define MakeHashTableBug        YES
 */

/*
 * If you do not want your man pages compress under SVR3 systems that
 * support it, uncomment this.
 *
#define CompressManPages        NO
 */

/*
 * If you have sgmlfmt (the XFree86 doctools package) and want to build
 * formatted docs from the SGML source, uncomment this.
 *
#define HasSgmlFmt		YES
 */

/*
 * To disable building some document formats, uncomment some of these.
 *
#define BuildLinuxDocText	NO
#define BuildLinuxDocHtml	NO
#define BuildLinuxDocPS		NO
 */

/*
 * To install Japanese versions of the documentation uncomment this.
 * Note: The Japanese documentation consists of a subset of the
 * XFree86 3.1 docs.
 *
#define InstallJapaneseDocs	YES
 */

/*
 * To build/install X specs docs, uncomment the following.
 * The SpecsDocDirs setting here is recommended because it covers
 * the docs that XFree86 has changed or added.
 *
#define BuildSpecsDocs		YES
#define SpecsDocDirs		CTEXT GL ICCCM X11 Xext Xmu Xv XvMC i18n
 */

/*
 * To build all specs docs, not just those listed in SpecsDocDirs, uncomment
 * the following.
 *
#define BuildAllSpecsDocs	YES
 */

/*
 * If your system doesn't support vm86() mode and you have
 * libx86emu set library path here
 *
#define X86EMU_LIBPATH /usr/local/lib
 */ 

#define BuildRman NO
#define BuildLoadableXlibI18n NO
