NULL =

/* Large PIC tables needed for SPARC builds */
#if defined(sparc) || defined(SparcArchitecture)
# define LargePICTable YES
   PICFLAGS = LargePositionIndependentCFlags
#endif

#include <Server.tmpl>

LinkSourceFile(glcontextmodes.c, $(MESASRCDIR)/src/glx/x11)
LinkSourceFile(glcontextmodes.h, $(MESASRCDIR)/src/glx/x11)

#if (!(defined(NXAgentServer) && NXAgentServer))
NXAGENT_SKIP_SRCS =                     \
                glxext.c                \
                $(NULL)
NXAGENT_SKIP_OBJS =                     \
                glxext.o                \
                $(NULL)
#else
       NX_DEFINES = -DNXAGENT_SERVER
#endif

         SRCS =					\
                glthread.c			\
                glxcmdsswap.c			\
                glxscreens.c			\
                indirect_dispatch.c		\
                indirect_program.c		\
                indirect_size_get.c		\
                indirect_texture_compression.c	\
                render2.c			\
                renderpix.c			\
                rensize.c			\
                single2swap.c			\
                singlepixswap.c			\
                swap_interval.c			\
                glapi.c				\
                glxcmds.c			\
                glxutil.c			\
                indirect_dispatch_swap.c	\
                indirect_reqsize.c		\
                indirect_table.c		\
                indirect_util.c			\
                render2swap.c			\
                renderpixswap.c			\
                single2.c			\
                singlepix.c			\
                singlesize.c			\
                xfont.c				\
                $(NXAGENT_SKIP_SRCS)		\
                $(NULL)

        OBJS =					\
                glthread.o			\
                glxcmdsswap.o			\
                glxscreens.o			\
                indirect_dispatch.o		\
                indirect_program.o		\
                indirect_size_get.o		\
                indirect_texture_compression.o	\
                render2.o			\
                renderpix.o			\
                rensize.o			\
                single2swap.o			\
                singlepixswap.o			\
                swap_interval.o			\
                glapi.o				\
                glxcmds.o			\
                glxutil.o			\
                indirect_dispatch_swap.o	\
                indirect_reqsize.o		\
                indirect_table.o		\
                indirect_util.o			\
                render2swap.o			\
                renderpixswap.o			\
                single2.o			\
                singlepix.o			\
                singlesize.o			\
                xfont.o				\
                $(NXAGENT_SKIP_SRCS)		\
                $(NULL)

     INCLUDES = -I$(SERVERSRC)/GL/glx                   \
                -I$(SERVERSRC)/GL/include               \
                -I$(SERVERSRC)/miext/damage             \
                -I$(SERVERSRC)/include                  \
                -I$(INCLUDESRC)                         \
                -I$(MESASRCDIR)/src/glx/x11             \
                -I$(MESASRCDIR)/src/mesa/main           \
                -I$(MESASRCDIR)/include                 \
                -I$(XINCLUDESRC)                        \
                -I$(SERVERSRC)/mi                       \
                -I$(EXTINCSRC)                          \
                -I$(LIBSRC)/GL/include                  \
                -I$(XF86SRC)                            \
                `pkg-config --cflags-only-I libdrm`     \
                `pkg-config --cflags-only-I pixman-1`   \
                $(NULL)

#if defined(DarwinArchitecture) && ((OSMajorVersion == 6 && OSMinorVersion < 3) || OSMajorVersion < 6)
  NO_EXT_DEFS = -DMISSING_GL_EXTS
#endif
#if defined(Win32Architecture)
# undef __stdcall
  APIENTRY_DEFS = -DAPIENTRY=__stdcall
#endif

XCOMM If you add "-DDEBUG" in DEFINES, then make sure you also
XCOMM add DEBUG to the define in ../mesa/src/X/xf86glx.c
      DEFINES = 				\
                $(GLX_DEFINES)			\
                $(NO_EXT_DEFS)			\
                $(APIENTRY_DEFS)		\
                $(NX_DEFINES)			\
                -DXSERVER_LACKS_PRIVATES_ABI	\
                -DXSERVER_LACKS_XACE_EXT	\
                $(NULL)

NormalLibraryObjectRule()
NormalLibraryTarget(glx,$(OBJS))
#if defined(GlxUseWindows) && GlxUseWindows
clean::
	RemoveFiles($(foreach obj,$(OBJS), stdcall/$(obj)))
includes::
	MakeDir(stdcall)
SpecialObjectRule(stdcall/%.o,%.c,-DUSE_OPENGL32 -o $@)
NormalLibraryTarget(glx_stdcall,$(foreach obj,$(OBJS), stdcall/$(obj)))
#endif
SubdirLibraryRule($(OBJS))

LintLibraryTarget(glx,$(SRCS))
NormalLintTarget($(SRCS))

DependTarget()

#ifdef IHaveSubdirs
MakeSubdirs($(SUBDIRS))
DependSubdirs($(SUBDIRS))
#endif
